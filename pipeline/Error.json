{
	"name": "Error",
	"properties": {
		"activities": [
			{
				"name": "Get Pipeline Error",
				"description": "Get the activity error details for the run ID of the worker pipeline called. Returns an array of all errors.",
				"type": "AzureFunctionActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "GetActivityErrors",
					"method": "POST",
					"body": {
						"value": "@concat('\n{\n    \"tenantId\": \"',variables('tenantId'),'\",\n    \"applicationId\": \"',variables('applicationId'),'\",\n    \"authenticationKey\": \"',variables('authenticationKey'),'\",\n    \"subscriptionId\": \"',variables('subscriptionId'),'\",\n    \"resourceGroupName\": \"',variables('resourceGroupName'),'\",\n    \"orchestratorName\": \"',pipeline().DataFactory,'\",\n    \"orchestratorType\": \"',variables('orchestratorType'),'\",\n    \"pipelineName\": \"',pipeline().parameters.PipelineName,'\",\n    \"runId\": \"',pipeline().parameters.runId,'\"\n}')",
						"type": "Expression"
					}
				},
				"linkedServiceName": {
					"referenceName": "FrameworkFunctions",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "For each error",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Pipeline Error",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Pipeline Error').output.Errors",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Lookup1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "insert into [dbo].[TaskInstanceError]\nSELECT @activity('Get Pipeline Error').output.RunId, @activity('Get Pipeline Error').output.PipelineName, @item().ActivityName, @item().ErrorMessage\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "GetSetMetadata",
									"type": "DatasetReference"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"runId": {
				"type": "string",
				"defaultValue": "d867a742-7ec2-4544-9b79-865b10e505d9"
			},
			"PipelineName": {
				"type": "string",
				"defaultValue": "Task"
			}
		},
		"variables": {
			"tenantId": {
				"type": "String",
				"defaultValue": "580a5de5-d69e-4245-885d-6339e2e76bc3"
			},
			"applicationId": {
				"type": "String",
				"defaultValue": "A72E314A-FBA1-48D1-AAB4-7F4B238880A1"
			},
			"authenticationKey": {
				"type": "String",
				"defaultValue": "3Z1qc~uiYX.95~_MbtA.6AE370yCl3NcmC"
			},
			"subscriptionId": {
				"type": "String",
				"defaultValue": "41dbffdf-c52c-4c80-be57-e9da2439348a"
			},
			"resourceGroupName": {
				"type": "String",
				"defaultValue": "CalleADF"
			},
			"orchestratorType": {
				"type": "String",
				"defaultValue": "ADF"
			},
			"test": {
				"type": "String"
			}
		},
		"annotations": []
	}
}